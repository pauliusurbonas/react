[{"/home/mint/projects/react/weather-app/src/index.js":"1","/home/mint/projects/react/weather-app/src/components/WeatherItem/WeatherItem.js":"2","/home/mint/projects/react/weather-app/src/components/Selector/CountrySelector.js":"3","/home/mint/projects/react/weather-app/src/components/Selector/CitySelector.js":"4","/home/mint/projects/react/weather-app/src/components/WeatherMap/WeatherMap.js":"5","/home/mint/projects/react/weather-app/src/WeatherApp.js":"6","/home/mint/projects/react/weather-app/src/components/WeatherItem/FavItem.js":"7","/home/mint/projects/react/weather-app/src/components/Dialog/AboutDialogContent.js":"8","/home/mint/projects/react/weather-app/src/components/Dialog/ConfirmDialog.js":"9"},{"size":481,"mtime":1611955094083,"results":"10","hashOfConfig":"11"},{"size":720,"mtime":1612161439477,"results":"12","hashOfConfig":"11"},{"size":902,"mtime":1612115058752,"results":"13","hashOfConfig":"11"},{"size":1571,"mtime":1612165427493,"results":"14","hashOfConfig":"11"},{"size":1184,"mtime":1612166619207,"results":"15","hashOfConfig":"11"},{"size":5190,"mtime":1612166749954,"results":"16","hashOfConfig":"11"},{"size":289,"mtime":1612162330842,"results":"17","hashOfConfig":"11"},{"size":409,"mtime":1612161278957,"results":"18","hashOfConfig":"11"},{"size":298,"mtime":1612156105266,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13arj6u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mint/projects/react/weather-app/src/index.js",[],["41","42"],"/home/mint/projects/react/weather-app/src/components/WeatherItem/WeatherItem.js",[],"/home/mint/projects/react/weather-app/src/components/Selector/CountrySelector.js",[],"/home/mint/projects/react/weather-app/src/components/Selector/CitySelector.js",[],"/home/mint/projects/react/weather-app/src/components/WeatherMap/WeatherMap.js",["43"],"import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './style/WeatherMap.scss';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicGF1bGl1c3UiLCJhIjoiY2traXduZnIwMTJxeDJ2cXQydG1sajJnMSJ9.o5ane_5y0vC4ZWzDqsoIMg'\n\nconst WeatherMap = (map) => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    //map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className='map-cont' ref={mapContainerRef} />\n  );\n};\n\nexport default WeatherMap;\n","/home/mint/projects/react/weather-app/src/WeatherApp.js",[],"/home/mint/projects/react/weather-app/src/components/WeatherItem/FavItem.js",[],"/home/mint/projects/react/weather-app/src/components/Dialog/AboutDialogContent.js",[],["44","45"],"/home/mint/projects/react/weather-app/src/components/Dialog/ConfirmDialog.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":16,"column":11,"nodeType":"53","endLine":21,"endColumn":7},{"ruleId":"47","replacedBy":"54"},{"ruleId":"49","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":9,"column":17,"nodeType":"58","messageId":"59","endLine":9,"endColumn":23},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","Assignments to the 'map' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression",["60"],["61"],"no-unused-vars","'result' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]