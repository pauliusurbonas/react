[{"/home/mint/projects/react/weather-app/src/index.js":"1","/home/mint/projects/react/weather-app/src/components/WeatherItem/WeatherItem.js":"2","/home/mint/projects/react/weather-app/src/components/Selector/CountrySelector.js":"3","/home/mint/projects/react/weather-app/src/components/Selector/CitySelector.js":"4","/home/mint/projects/react/weather-app/src/components/WeatherMap/WeatherMap.js":"5","/home/mint/projects/react/weather-app/src/WeatherApp.js":"6","/home/mint/projects/react/weather-app/src/components/WeatherItem/FavItem.js":"7","/home/mint/projects/react/weather-app/src/components/Dialog/AboutDialogContent.js":"8","/home/mint/projects/react/weather-app/src/components/Dialog/ConfirmDialog.js":"9"},{"size":481,"mtime":1611955094083,"results":"10","hashOfConfig":"11"},{"size":720,"mtime":1612161439477,"results":"12","hashOfConfig":"11"},{"size":902,"mtime":1612115058752,"results":"13","hashOfConfig":"11"},{"size":1525,"mtime":1612171605974,"results":"14","hashOfConfig":"11"},{"size":1519,"mtime":1612331397550,"results":"15","hashOfConfig":"11"},{"size":5581,"mtime":1612332656015,"results":"16","hashOfConfig":"11"},{"size":289,"mtime":1612162330842,"results":"17","hashOfConfig":"11"},{"size":409,"mtime":1612161278957,"results":"18","hashOfConfig":"11"},{"size":298,"mtime":1612156105266,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13arj6u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mint/projects/react/weather-app/src/index.js",[],["40","41"],"/home/mint/projects/react/weather-app/src/components/WeatherItem/WeatherItem.js",[],"/home/mint/projects/react/weather-app/src/components/Selector/CountrySelector.js",[],"/home/mint/projects/react/weather-app/src/components/Selector/CitySelector.js",[],"/home/mint/projects/react/weather-app/src/components/WeatherMap/WeatherMap.js",["42"],"import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './style/WeatherMap.scss';\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOXGL_API_KEY\n\nconst WeatherMap = (map) => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    //map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    map.on('load', function(){\n      map.addLayer({\n        \"id\": \"simple-tiles\",\n        \"type\": \"raster\",\n        \"source\": {\n          \"type\": \"raster\",\n          \"tiles\": [\"https://tile.openweathermap.org/map/precipitation_new/{z}/{x}/{y}.png?appid=da9bf4fda4b30e8f99c29721f7de5192\"],\n          \"tileSize\": 256\n        },\n        \"minzoom\": 0,\n        \"maxzoom\": 22\n      });\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className='map-cont' ref={mapContainerRef} />\n  );\n};\n\nexport default WeatherMap;\n","/home/mint/projects/react/weather-app/src/WeatherApp.js",["43"],"/home/mint/projects/react/weather-app/src/components/WeatherItem/FavItem.js",[],"/home/mint/projects/react/weather-app/src/components/Dialog/AboutDialogContent.js",[],"/home/mint/projects/react/weather-app/src/components/Dialog/ConfirmDialog.js",["44"],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":16,"column":11,"nodeType":"51","endLine":21,"endColumn":7},{"ruleId":"52","severity":1,"message":"53","line":11,"column":7,"nodeType":"54","messageId":"55","endLine":11,"endColumn":13},{"ruleId":"52","severity":1,"message":"56","line":9,"column":17,"nodeType":"54","messageId":"55","endLine":9,"endColumn":23},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"react-hooks/exhaustive-deps","Assignments to the 'map' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","no-unused-vars","'dotenv' is assigned a value but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]