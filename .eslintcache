[{"/home/mint/projects/react/weather-app/src/index.js":"1","/home/mint/projects/react/weather-app/src/components/WeatherItem/WeatherItem.js":"2","/home/mint/projects/react/weather-app/src/components/Selector/CountrySelector.js":"3","/home/mint/projects/react/weather-app/src/components/Selector/CitySelector.js":"4","/home/mint/projects/react/weather-app/src/components/WeatherMap/WeatherMap.js":"5","/home/mint/projects/react/weather-app/src/WeatherApp.js":"6","/home/mint/projects/react/weather-app/src/components/WeatherItem/FavItem.js":"7","/home/mint/projects/react/weather-app/src/components/Dialog/AboutDialogContent.js":"8","/home/mint/projects/react/weather-app/src/components/Dialog/ConfirmDialog.js":"9"},{"size":481,"mtime":1611955094083,"results":"10","hashOfConfig":"11"},{"size":755,"mtime":1612157529477,"results":"12","hashOfConfig":"11"},{"size":902,"mtime":1612115058752,"results":"13","hashOfConfig":"11"},{"size":1569,"mtime":1612142731755,"results":"14","hashOfConfig":"11"},{"size":1185,"mtime":1612147427828,"results":"15","hashOfConfig":"11"},{"size":5229,"mtime":1612157554877,"results":"16","hashOfConfig":"11"},{"size":335,"mtime":1612153000131,"results":"17","hashOfConfig":"11"},{"size":390,"mtime":1612157921484,"results":"18","hashOfConfig":"11"},{"size":298,"mtime":1612156105266,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"13arj6u",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/mint/projects/react/weather-app/src/index.js",[],["40","41"],"/home/mint/projects/react/weather-app/src/components/WeatherItem/WeatherItem.js",["42","43"],"/home/mint/projects/react/weather-app/src/components/Selector/CountrySelector.js",[],"/home/mint/projects/react/weather-app/src/components/Selector/CitySelector.js",[],"/home/mint/projects/react/weather-app/src/components/WeatherMap/WeatherMap.js",["44"],"import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport './style/WeatherMap.scss';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoicGF1bGl1c3UiLCJhIjoiY2traXduZnIwMTJxeDJ2cXQydG1sajJnMSJ9.o5ane_5y0vC4ZWzDqsoIMg';\n\nconst WeatherMap = (map) => {\n  const mapContainerRef = useRef(null);\n\n  const [lng, setLng] = useState(5);\n  const [lat, setLat] = useState(34);\n  const [zoom, setZoom] = useState(1.5);\n\n  // Initialize map when component mounts\n  useEffect(() => {\n    map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [lng, lat],\n      zoom: zoom\n    });\n\n    // Add navigation control (the +/- zoom buttons)\n    //map.addControl(new mapboxgl.NavigationControl(), 'top-right');\n\n    map.on('move', () => {\n      setLng(map.getCenter().lng.toFixed(4));\n      setLat(map.getCenter().lat.toFixed(4));\n      setZoom(map.getZoom().toFixed(2));\n    });\n\n    // Clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className='map-cont' ref={mapContainerRef} />\n  );\n};\n\nexport default WeatherMap;\n","/home/mint/projects/react/weather-app/src/WeatherApp.js",["45","46"],"/home/mint/projects/react/weather-app/src/components/WeatherItem/FavItem.js",["47"],"/home/mint/projects/react/weather-app/src/components/Dialog/AboutDialogContent.js",["48"],"/home/mint/projects/react/weather-app/src/components/Dialog/ConfirmDialog.js",["49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":6,"column":3,"nodeType":"56","messageId":"57","endLine":8,"endColumn":4},{"ruleId":"58","severity":1,"message":"59","line":20,"column":39,"nodeType":"60","endLine":20,"endColumn":67},{"ruleId":"61","severity":1,"message":"62","line":16,"column":11,"nodeType":"63","endLine":21,"endColumn":7},{"ruleId":"64","severity":1,"message":"65","line":113,"column":35,"nodeType":"66","messageId":"67","endLine":113,"endColumn":37},{"ruleId":"68","severity":1,"message":"69","line":142,"column":27,"nodeType":"70","messageId":"71","endLine":142,"endColumn":31},{"ruleId":"54","severity":1,"message":"55","line":4,"column":3,"nodeType":"56","messageId":"57","endLine":6,"endColumn":4},{"ruleId":"72","severity":1,"message":"73","line":7,"column":128,"nodeType":"60","endLine":7,"endColumn":198},{"ruleId":"68","severity":1,"message":"74","line":9,"column":17,"nodeType":"70","messageId":"71","endLine":9,"endColumn":23},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","Assignments to the 'map' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'note' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'result' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]